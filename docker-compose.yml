version: "3.7"
services:
  db: # postgres
    image: postgres:12
    container_name: "account_db"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./sql:/sql
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 30

  auth: # keycloak
    image: quay.io/keycloak/keycloak:latest
    container_name: "account_auth"
    ports:
      - 8080:8080
      - 9990:9990
    command: start-dev
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL_DATABASE: keycloak
      KC_DB_URL_HOST: db
      KC_DB_URL_PORT: 5432
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: password
    volumes: [./backend/themes:/opt/keycloak/themes]
    depends_on:
      db:
        condition: service_healthy

  api: # hasura
    build:
      context: .docker
      dockerfile: api.Dockerfile
    container_name: "account_api"
    ports: ["8082:8080"]
    volumes: [./api:/hasura]
    environment:
      HASURA_GRAPHQL_METADATA_DIR: /hasura/metadata
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_DATABASE_URL: postgres://keycloak:password@db:5432/keycloak
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      HASURA_GRAPHQL_ADMIN_SECRET: myadminsecretkey
      # HASURA_GRAPHQL_JWT_SECRET: '{ "type": "RS256", "jwk_url": "http://keycloak:8080/auth/realms/master/protocol/openid-connect/certs" }'
    depends_on:
      db:
        condition: service_healthy

  front: # nextjs
    build:
      context: .docker
      dockerfile: frontend.Dockerfile
    container_name: account_front
    ports: [3000:3000]
    command: sh -c "npm install && npm run dev"
    volumes: [.:/repo]
    environment: [WATCHPACK_POLLING=true]
    depends_on: [auth, api]

volumes:
  db_data:
