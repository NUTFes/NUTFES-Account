version: '3.7'
services:
  nginx:
    image: nginx:1.17
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - 8000:80
    depends_on:
      - backend
      - frontend-sample

  redis:
    image: redis
    ports:
      - 6379:6379

  # postgres:
  #   image: postgres:12
  #   restart: always
  #   environment:
  #     POSTGRES_USER: postgres
  #     POSTGRES_PASSWORD: password
  #   ports:
  #     - '5432:5432'
  #   volumes:
  #     - db-data:/var/lib/postgresql/data:cached

  mariadb:
    image: mariadb:10.5
    restart: always
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_HOST: db
      MYSQL_ROOT_PASSWORD: password
      MYSQL_USER: develop
      MYSQL_PASSWORD: devpass
      MYSQL_DB: test
    ports:
      - "3306:3306"
    volumes:
      - .docker/.db-data:/var/lib/mysql:cached
      - .docker/.initdb.d:/docker-entrypoint-initdb.d
    
  adminer:
    image: adminer
    restart: always
    ports:
      - 8242:8080

  worker:
    build:
      context: backend
      dockerfile: Dockerfile
    command: celery --app app.tasks worker --loglevel=DEBUG -Q main-queue -c 1

  flower:  
    image: mher/flower
    command: celery flower --broker=redis://redis:6379/0 --port=5555
    ports:  
        - 5555:5555
    depends_on:
      - "redis"

  backend:
    build:
      context: backend
      dockerfile: Dockerfile
    command: python app/main.py
    tty: true
    volumes:
      - ./backend:/app:cached
      - ./.docker/.ipython:/root/.ipython:cached
    environment:
      PYTHONPATH: .
      #DATABASE_URL: 'postgresql://postgres:password@postgres:5432/postgres'
      DATABASE_URL: 'mysql+mysqldb://root:password@mariadb:3306/test?charset=utf8'
    depends_on:
      - "mariadb"

  frontend-sample:
    build:
      context: frontend-sample
      dockerfile: Dockerfile
    stdin_open: true
    volumes:
      - './frontend-sample:/app:cached'
      - './frontend-sample/node_modules:/app/node_modules:cached'
    environment:
      - NODE_ENV=development

  frontend:
    build: ./frontend
    container_name: "frontend"
    volumes:
      - './frontend:/usr/src/app/next-project:cached'
    environment:
      - NODE_ENV=development
    command: "npm run dev"
    ports:
      - "3000:3000"
    stdin_open: true
    tty: true