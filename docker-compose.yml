version: "3.7"
services:
  db: # postgres
    image: postgres:12
    container_name: "account_db"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./sql:/sql
    env_file: [../settings/account/development.env]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 30

  auth: # keycloak
    build:
      context: .docker
      dockerfile: auth.Dockerfile
    container_name: "account_auth"
    ports:
      - 8080:8080
      - 9990:9990
    command: start-dev
    env_file: [../settings/account/development.env]
    volumes:
      - ./auth/merge.sh:/opt/keycloak/merge.sh
      - ./auth/themes:/opt/keycloak/themes
      - ../settings/account/data:/opt/keycloak/data # required settings repository
    depends_on:
      db:
        condition: service_healthy
    extra_hosts:
      - host.docker.internal:host-gateway

  api: # hasura
    build:
      context: .docker
      dockerfile: api.Dockerfile
    container_name: "account_api"
    ports: ["8082:8080"]
    volumes: [./api:/hasura]
    env_file: [../settings/account/development.env]
    depends_on:
      db:
        condition: service_healthy

  front: # nextjs
    build:
      context: .docker
      dockerfile: frontend.Dockerfile
    container_name: account_front
    ports: [3000:3000]
    command: sh -c "npm install && npm run dev"
    volumes: [.:/repo]
    env_file: [../settings/account/development.env]
    depends_on: [auth, api]

volumes:
  db_data:
